'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeTemplateTag = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.createClient = createClient;

var _GremlinClient = require('./GremlinClient');

var _GremlinClient2 = _interopRequireDefault(_GremlinClient);

var _gremlinTemplateString = require('gremlin-template-string');

var _gremlinTemplateString2 = _interopRequireDefault(_gremlinTemplateString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createClient(port, host, options) {
  if ((typeof port === 'undefined' ? 'undefined' : _typeof(port)) === 'object') {
    options = port;
    port = undefined;
  }

  if ((typeof host === 'undefined' ? 'undefined' : _typeof(host)) === 'object') {
    options = host;
    host = undefined;
  }

  return new _GremlinClient2.default(port, host, options);
};

var makeTemplateTag = exports.makeTemplateTag = function makeTemplateTag(client) {
  return function () {
    var query = _gremlinTemplateString2.default.apply(undefined, arguments);
    var promise = new Promise(function (resolve, reject) {
      return client.execute(query, function (err, results) {
        return err ? reject(err) : resolve(results);
      });
    });
    // Let's attach the query for easier debugging
    promise.query = query;

    return promise;
  };
};

exports.default = {
  createClient: createClient,
  makeTemplateTag: makeTemplateTag
};